name: PROD - Build & Release Python Executable for Windows

on:
  push:
    branches:
      - main

jobs:
  release-job:
    runs-on: windows-latest        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # serve per avere tutta la history

      - name: Check if the last commit is a merge from develop
        id: check_merge
        run: |
          # SHA dell'ultimo commit su main
          $LAST_COMMIT = (git rev-parse HEAD).Trim()

          # conta i parent (se sono 2 parent -> merge commit)
          $PARENTS = (git rev-list --parents -n 1 $LAST_COMMIT).Split(" ")

          if ($PARENTS.Count -ne 3) {
            Write-Output "❌ The last commit is not a merge from develop. Stopping the workflow."
            echo "merge_from_develop=false" >> $GITHUB_ENV
            exit 0
          }

          # controlla se uno dei parent è develop
          $DEVELOP_SHA = (git rev-parse origin/develop).Trim()
          if ($PARENTS -contains $DEVELOP_SHA) {
            echo "merge_from_develop=true" >> $env:GITHUB_ENV
          }
          else {
            Write-Output "❌ The last commit does not contain develop as a parent. Stopping the workflow."
            echo "merge_from_develop=false" >> $GITHUB_ENV
            exit 0
          }
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build with PyInstaller
        run: pyinstaller --onefile --windowed excel_to_sql_converter.py

      - name: Get last dev tag
        id: get_tag
        run: |
          # prendo l’ultimo tag che finisce con -dev
          $lastDevTag = git tag --sort=-creatordate | Where-Object { $_ -like "*-dev" } | Select-Object -First 1
          if (-not $lastDevTag) {
            Write-Error "❌ No dev tag found!"
            exit 1
          }

          Write-Output "✅ Last dev tag found: $lastDevTag"

          # tolgo il suffisso -dev
          $releaseVersion = $lastDevTag -replace "-dev",""
          $releaseTag = "v$releaseVersion"

          echo "release_tag=$releaseTag" >> $env:GITHUB_ENV
          echo "release_version=$releaseVersion" >> $env:GITHUB_ENV

      - name: Create and push tag
        run: |
          git config --global user.email "federico.bot@gmail.com"
          git config --global user.name "Akr0n"
          git tag v${{ env.NEWVERSION }}
          git push origin v${{ env.NEWVERSION }}
        
      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release with changelog
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.NEWVERSION }}
          release_name: Release v${{ env.NEWVERSION }}
          body: ${{ steps.gh_changelog.outputs.changelog }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/excel_to_sql_converter.exe
          asset_name: excel_to_sql_converter.exe
          asset_content_type: application/octet-stream
